# Generated by Django 3.2.10 on 2022-01-09 16:42

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


def reassign_relations(apps, schema_editor):
    Relation = apps.get_model('projects', 'Relation')
    RelationVariant = apps.get_model('projects', 'RelationVariant')
    
    for r in Relation.objects.all():
        RelationVariant.objects.create(project=r.project, relation=r)


class Migration(migrations.Migration):

    dependencies = [
        ('projects', '0127_auto_20220105_0803'),
    ]

    operations = [
        migrations.CreateModel(
            name='Range',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dt_created', models.DateTimeField(default=django.utils.timezone.now, help_text='Autofilled', null=True, verbose_name='Created at')),
                ('dt_updated', models.DateTimeField(help_text='Autofilled', null=True, verbose_name='Updated at')),
                ('min_value', models.FloatField(blank=True, null=True, verbose_name='minimal value')),
                ('max_value', models.FloatField(blank=True, null=True, verbose_name='maximal value')),
                ('step', models.FloatField(blank=True, null=True, verbose_name='step')),
            ],
            options={
                'verbose_name': 'ranges',
            },
        ),
        migrations.AlterModelOptions(
            name='project',
            options={'ordering': ['-dt_finish'], 'permissions': (('view_this_post', 'Can view this project'),), 'verbose_name': 'project', 'verbose_name_plural': 'projects'},
        ),
        migrations.AlterField(
            model_name='markerunit',
            name='is_rankable',
            field=models.BooleanField(default=False, help_text='Whether annotators should be allowed to rank marker groups in the unit', verbose_name='is rankable?'),
        ),
        migrations.AlterField(
            model_name='markerunit',
            name='minimum_required',
            field=models.PositiveIntegerField(default=1, help_text="Minimum required number of marker groups in the unit (can't be more than `size`)", verbose_name='minimum required'),
        ),
        migrations.AlterField(
            model_name='markerunit',
            name='size',
            field=models.PositiveIntegerField(default=1, help_text='Default (and maximal) number of marker groups in the unit', verbose_name='size'),
        ),
        migrations.AlterField(
            model_name='markervariant',
            name='anno_type',
            field=models.CharField(choices=[('m-span', 'Marker (text spans)'), ('m-text', 'Marker (whole text)'), ('free-text', 'Short free-text input'), ('lfree-text', 'Long free-text input'), ('integer', 'Integer'), ('float', 'Floating-point number'), ('range', 'Range')], default='m-span', help_text='The type of annotations made using this marker', max_length=10, verbose_name='annotation type'),
        ),
        migrations.CreateModel(
            name='RelationVariant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dt_created', models.DateTimeField(default=django.utils.timezone.now, help_text='Autofilled', null=True, verbose_name='Created at')),
                ('dt_updated', models.DateTimeField(help_text='Autofilled', null=True, verbose_name='Updated at')),
                ('custom_shortcut', models.CharField(blank=True, help_text='Keyboard shortcut for marking a piece of text with this relation (shortcut of the relation template by default)', max_length=15, null=True, verbose_name='keyboard shortcut')),
                ('custom_representation', models.CharField(choices=[('g', 'Graph'), ('l', 'List')], default='g', help_text='How should the relation be visualized? (representation of the relation template by default)', max_length=1, verbose_name='graphical representation type')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.project')),
                ('relation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.relation', verbose_name='relation template')),
            ],
            options={
                'verbose_name': 'relation variant',
                'unique_together': {('project', 'relation')},
            },
        ),
        migrations.AddField(
            model_name='markervariant',
            name='nrange',
            field=models.ForeignKey(blank=True, help_text='If applicable', null=True, on_delete=django.db.models.deletion.SET_NULL, to='projects.range', verbose_name='numeric range'),
        ),
        migrations.RunPython(reassign_relations, migrations.RunPython.noop),
        migrations.AddField(
            model_name='project',
            name='relations',
            field=models.ManyToManyField(blank=True, through='projects.RelationVariant', to='projects.Relation', verbose_name='project-specific relations'),
        ),
    ]
