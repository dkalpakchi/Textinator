"""
Django settings for Textinator project.

Generated by 'django-admin startproject' using Django 2.2.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
import yaml
import uuid
import random

from pathlib import Path

from reportlab.pdfbase import pdfmetrics
from reportlab.pdfbase.ttfonts import TTFont


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

DATA_UPLOAD_MAX_NUMBER_FIELDS = 20240
DATA_UPLOAD_MAX_MEMORY_SIZE = 104857600 # 100 MB

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

SECRET_KEY = os.environ.get("SECRET_KEY", uuid.uuid4().hex[:random.randint(8, 36)])

DEBUG = int(os.environ.get("DEBUG", default=0))

# 'DJANGO_ALLOWED_HOSTS' should be a single string of hosts with a space between each.
# For example: 'DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]'
ALLOWED_HOSTS = os.environ.get("DJANGO_ALLOWED_HOSTS", "localhost").split(" ")

# Application definition

INSTALLED_APPS = [
    'jazzmin',
    'filebrowser',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    "compressor",
    'sass_processor',
    # 'prettyjson',
    'django_admin_json_editor',
    'django_registration',
    'tinymce',
    'chartjs',
    'projects',
    'rangefilter',
    # 'surveys'
    # 'django_extensions',
    'nested_admin',
    'survey',
    'users',
    'colorfield'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'Textinator.backends.EmailAuthenticationBackend',
]

ROOT_URLCONF = 'Textinator.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.jinja2.Jinja2',
        'DIRS': [os.path.join(BASE_DIR, 'jinja2')],
        'APP_DIRS': True,
        'OPTIONS': {
            'environment': 'Textinator.jinja2.environment',
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'projects.context_processors.common_user_variables'
            ]
        },
    },
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'projects.context_processors.common_user_variables'
            ],
            'libraries': {
                'common_extras': 'Textinator.templatetags.common_extras',
                'survey_extras': 'survey.templatetags.survey_extras'
            },
        },
    }
]

WSGI_APPLICATION = 'Textinator.wsgi.application'

# Email
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.environ.get('TT_DB_NAME'),
        'USER': os.environ.get('TT_DB_USER'),
        'PASSWORD': os.environ.get('TT_DB_PASSWORD'),
        'HOST': os.environ.get('TT_DB_HOST'),
        'PORT': os.environ.get('TT_DB_PORT'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# TODO: make it more elegant
LOGOUT_REDIRECT_URL = '/textinator/accounts/login'


# Caches
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
        'LOCATION': '127.0.0.1:11211',
    },
    'context': {
        'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
        'LOCATION': '127.0.0.1:11211',
    },
    'input': {
        'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
        'LOCATION': '127.0.0.1:11211',
    }
}



# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGES = [
    ('en', 'English'),
    ('sv', 'Swedish'),
    ('uk', 'Ukrainian')
]

LANGUAGE_CODE = 'en'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static')
]
STATIC_URL = '/textinator/static/'
MEDIA_URL = '/textinator/media/'
STATIC_ROOT = 'static_cdn'

MEDIA_ROOT = os.path.join(BASE_DIR, "media")

# Django Sass
SASS_PROCESSOR_ROOT = os.path.join(BASE_DIR, 'static')

STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    'sass_processor.finders.CssFinder',
]


# The types of tasks allowed inside the Textinator project
# TODO: handle if the file does not exist
TASK_TYPES = list(yaml.load(open(os.path.join(BASE_DIR, 'task_types.yaml')), Loader=yaml.FullLoader).items())

DATASOURCE_TYPES = [
    ('PlainText', 'Plain text'),
    ('TextFile', 'Plain text file(s)'),
    ('Json', 'JSON file(s)'),
    ('TextsAPI', 'API')
]

MARKER_TYPES = [
    ('lb', 'Label'),
    ('rl', 'Relation')
]

LOGIN_URL = '/textinator/accounts/login/'

TINYMCE_DEFAULT_CONFIG = {
    'height': 400,
    'width': '90%',
    'cleanup_on_startup': True,
    'custom_undo_redo_levels': 20,
    'selector': 'textarea',
    'theme': 'modern',
    'plugins':'''
            textcolor save link image media preview table lists fullscreen insertdatetime
            contextmenu directionality searchreplace wordcount code fullscreen autolink lists charmap print
            ''',
    'toolbar1': '''
            fullscreen preview bold italic underline | fontselect,
            fontsizeselect  | forecolor backcolor | alignleft alignright |
            aligncenter alignjustify | indent outdent | bullist numlist table |
            | link image media | charmap |
            ''',
    'menubar': True,
    'statusbar': True,
    'relative_urls': False    
}

# TINYMCE_CALLBACKS = {
#     'file_browser_callback': 'customFileBrowser'
# }

FILEBROWSER_MAX_UPLOAD_SIZE = 20971520


pdfmetrics.registerFont(TTFont('Terminator',
    os.path.join(BASE_DIR, 'static', 'styles', 'terminator real nfi.ttf')))



CSV_DIRECTORY = Path("csv") # Define the directory where csv are exported
TEX_DIRECTORY = Path("tex") # Define the directory where tex files and pdf are exported


CHOICES_SEPARATOR = "|"